r - any register name
i - any const immediate
l - label
b - r or b

exit label is at end of code
start label is at start of code

False = 0
True = cell_size^(num_size-1)
False and True are immediate aliases

Code must start with 4 space separated integers:
num_sizes cell_range temp_amount register_amount


Copy:
mov r b
load r b
store b b

Math:
neg r
add r b b
sub r b b
less r b b    - Unsigned comparision (except for immediate-immediate comparision)
eq r b b

Logic:
logic_not r     - r must contain True or False
logic_and r r r - r must contain True or False
logic_or r b b

Binary:
binary_not r    - r must contain True of False

IO:
read r
write b

Stack:
push b
pop r

Flow:
ret
label l
jmp l
jnz r l
call l    :=   push next_basic_block; goto label;